{"version":3,"file":"static/js/843.9a6f81df.chunk.js","mappings":"gSAqBA,EAfwB,SAACA,GACvB,IAAQC,GAAWC,EAAAA,EAAAA,KAAXD,OACAE,GAAaC,EAAAA,EAAAA,YAAWC,EAAAA,GAAxBF,SAER,GAAqDG,EAAAA,EAAAA,UACnD,CAAC,UAAWL,EAAS,KAAO,QAASD,EAASG,IAC9C,kBAAMI,EAAAA,EAAAA,IAAWN,EAAS,KAAO,QAASD,EAASG,KACnD,CACEK,UAAWR,IAIf,MAAO,CAAES,QART,EAAQC,KAQUC,eARlB,EAAuBC,Y,SC8CnBC,GAAUC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAH,iGAQPE,EAASF,EAAAA,GAAAA,IAAH,mOAaNG,EAAUH,EAAAA,GAAAA,IAAH,6MAaPI,EAAcJ,EAAAA,GAAAA,IAAH,+EAMjB,EAnFoB,SAAC,GAAiD,IAAD,IAA9Cd,EAA8C,EAA9CA,QAASmB,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,MAC5C,GAA4BC,EAAAA,EAAAA,WAAS,GAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCC,EAAgBxB,GAA5CS,EAAR,EAAQA,QAGR,OAHA,EAAiBE,gBAGV,UAAmBF,EAAQgB,eAA3B,OAAmB,EAAiBC,QACzC,iCACE,SAACb,EAAD,CACEc,IAAG,oDACDlB,EAAQgB,QAAQhB,EAAQgB,QAAQC,OAAS,UADxC,aACD,EAA6CE,KAE/CC,SAAS,EACTC,QAAOR,EACPS,UAAU,EACVC,MAAM,EACNC,MAAM,OACNC,OAAO,OACPC,OAAQ,CACNC,QAAS,CACPC,WAAY,CACVC,OAAQ,+BAKhB,SAACtB,EAAD,CAAQuB,GAAIjB,EAASkB,EAAAA,EAAYC,EAAAA,EAAUC,QAtB1B,kBAAMnB,GAAU,SAACoB,GAAD,OAAWA,YAyB9C,iCACE,SAAC1B,EAAD,IACCE,GACC,SAACD,EAAD,CACE0B,KAAKC,EAAAA,EAAAA,IAAcC,EAAAA,GAAAA,SAAwB3B,GAC3C4B,IAAG,UAAK3B,EAAL,aACH4B,QAAQ,UAGV,SAACC,EAAA,EAAD","sources":["hook/query/useTrailerQuery.ts","components/common/VideoPlayer.tsx"],"sourcesContent":["import { useContext } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { getTrailer, IGetVideo } from \"../../api/api\";\nimport { LanguageContext } from \"../../context/LanguageContext\";\nimport useFindPath from \"../useFindPath\";\n\nconst useTrailerQuery = (videoId: number) => {\n  const { tvPath } = useFindPath();\n  const { language } = useContext(LanguageContext);\n\n  const { data: trailer, isLoading: trailerLoading } = useQuery<IGetVideo>(\n    [\"trailer\", tvPath ? \"tv\" : \"movie\", videoId, language],\n    () => getTrailer(tvPath ? \"tv\" : \"movie\", videoId, language),\n    {\n      enabled: !!videoId,\n    }\n  );\n\n  return { trailer, trailerLoading };\n};\n\nexport default useTrailerQuery;\n","import { MovieCreation, VolumeOff, VolumeUp } from '@mui/icons-material';\nimport { useState } from 'react';\nimport { backdropSizes, sizeImagePath } from '../../utils/sizeImagePath';\nimport ReactPlayer from 'react-player/lazy';\nimport styled from 'styled-components';\nimport useTrailerQuery from '../../hook/query/useTrailerQuery';\n\ninterface PropsType {\n  videoId: number;\n  backdropPath?: string;\n  title: string;\n}\n\nconst VideoPlayer = ({ videoId, backdropPath, title }: PropsType) => {\n  const [volume, setVolume] = useState(true);\n  const { trailer, trailerLoading } = useTrailerQuery(videoId);\n  const handleVolume = () => setVolume((prev) => !prev);\n\n  return !trailerLoading && trailer.results?.length ? (\n    <>\n      <Trailer\n        url={`https://www.youtube.com/watch?v=${\n          trailer.results[trailer.results.length - 1]?.key\n        }`}\n        playing={true}\n        muted={volume ? true : false}\n        controls={false}\n        loop={true}\n        width='100%'\n        height='100%'\n        config={{\n          youtube: {\n            playerVars: {\n              origin: 'https://localhost:3000',\n            },\n          },\n        }}\n      />\n      <Volume as={volume ? VolumeOff : VolumeUp} onClick={handleVolume} />\n    </>\n  ) : (\n    <>\n      <Overlay />\n      {backdropPath ? (\n        <BackdropImg\n          src={sizeImagePath(backdropSizes.original, backdropPath)}\n          alt={`${title} backdrop`}\n          loading='lazy'\n        />\n      ) : (\n        <MovieCreation />\n      )}\n    </>\n  );\n};\n\nconst Trailer = styled(ReactPlayer)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n`;\n\nconst Volume = styled.svg`\n  cursor: pointer;\n  position: absolute;\n  bottom: 20px;\n  right: 20px;\n  width: 30px;\n  height: 30px;\n  border: 1px solid #aaa;\n  border-radius: 50%;\n  background-color: #333;\n  padding: 2px;\n`;\n\nconst Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: linear-gradient(\n    to bottom,\n    rgba(0, 0, 0, 0) 50%,\n    rgba(0, 0, 0, 1) 100%\n  );\n`;\n\nconst BackdropImg = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport default VideoPlayer;\n"],"names":["videoId","tvPath","useFindPath","language","useContext","LanguageContext","useQuery","getTrailer","enabled","trailer","data","trailerLoading","isLoading","Trailer","styled","ReactPlayer","Volume","Overlay","BackdropImg","backdropPath","title","useState","volume","setVolume","useTrailerQuery","results","length","url","key","playing","muted","controls","loop","width","height","config","youtube","playerVars","origin","as","VolumeOff","VolumeUp","onClick","prev","src","sizeImagePath","backdropSizes","alt","loading","MovieCreation"],"sourceRoot":""}