{"version":3,"file":"static/js/158.b7f2d2e5.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Theaters.js","../node_modules/@mui/icons-material/esm/Person.js","components/modalDetail/Cast.tsx","hook/query/useMovieDetailQuery.ts","components/modalDetail/AdditionalContents.tsx","components/modalDetail/Category.tsx","components/MovieDetail.tsx","utils/convertRunningTime.ts","../node_modules/@mui/icons-material/esm/Image.js","../node_modules/@mui/icons-material/esm/AccessTime.js","utils/checkScheduledAir.ts","hook/query/useTvDetailQuery.ts","components/modalDetail/Episodes.tsx","components/modalDetail/Keywords.tsx","components/TvDetail.tsx","components/modalDetail/RunTime.tsx","components/modalDetail/Genres.tsx","components/Modal.tsx","hook/query/useTrailerQuery.ts","components/common/VideoPlayer.tsx"],"sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18 3v2h-2V3H8v2H6V3H4v18h2v-2h2v2h8v-2h2v2h2V3h-2zM8 17H6v-2h2v2zm0-4H6v-2h2v2zm0-4H6V7h2v2zm10 8h-2v-2h2v2zm0-4h-2v-2h2v2zm0-4h-2V7h2v2z\"\n}), 'Theaters');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import { IGuestStar, Language } from '../../api/api';\nimport { profileSizes, sizeImagePath } from '../../utils/sizeImagePath';\nimport { Person } from '@mui/icons-material';\nimport { Info } from '../Modal';\nimport { useContext } from 'react';\nimport { LanguageContext } from '../../context/LanguageContext';\nimport styled from 'styled-components';\n\ninterface PropsType {\n  cast: IGuestStar[];\n}\n\nconst Cast = ({ cast }: PropsType) => {\n  const { language } = useContext(LanguageContext);\n  return (\n    <Info $column='column'>\n      <h5>{language === Language.ko ? '출연진' : 'Cast'}</h5>\n      <CastList>\n        {cast?.slice(0, 10)?.map((item) => (\n          <Actor key={item.id}>\n            {item.profile_path ? (\n              <img\n                src={sizeImagePath(profileSizes.w185, item.profile_path)}\n                alt={`${item.name} profile`}\n              />\n            ) : (\n              <Person />\n            )}\n            <h6>{item.name}</h6>\n            <span>{item.character}</span>\n          </Actor>\n        ))}\n      </CastList>\n    </Info>\n  );\n};\n\nexport const CastList = styled.ul`\n  display: flex;\n  gap: 0 10px;\n  overflow: scroll;\n  width: fit-content;\n`;\n\nexport const Actor = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  padding: 10px;\n  width: 120px;\n  font-size: 14px;\n  border-radius: 2px;\n  background-color: ${(props) => props.theme.black.lighter};\n  img {\n    border-radius: 5px;\n    width: auto;\n    height: 140px;\n    margin: 0 auto;\n  }\n  svg {\n    width: 90px;\n    height: 140px;\n    margin: 0 auto;\n  }\n  h6 {\n    font-size: 16px;\n    font-weight: 700;\n  }\n  span {\n    display: block;\n    font-size: 13px;\n  }\n`;\n\nexport default Cast;\n","import { useContext } from \"react\";\nimport { useQuery } from \"react-query\";\nimport {\n  getCollection,\n  getCrews,\n  getKeyword,\n  getRecommendation,\n  getSimilar,\n  ICastCrew,\n  ICollection,\n  IDetail,\n  IGetMovieTvResult,\n  IKeywords,\n} from \"../../api/api\";\nimport { LanguageContext } from \"../../context/LanguageContext\";\nimport useFindPath from \"../useFindPath\";\n\nconst useMovieDetailQuery = (detail?: IDetail) => {\n  const { moviePath } = useFindPath();\n  const { language } = useContext(LanguageContext);\n\n  const { data: collection, isLoading: collectionIsLoading } =\n    useQuery<ICollection>(\n      [\"details\", \"collection\", detail?.belongs_to_collection?.id, language],\n      () => getCollection(detail?.belongs_to_collection?.id, language),\n      {\n        enabled: !!detail?.belongs_to_collection?.id && moviePath,\n      }\n    );\n\n  const { data: recommendation, isLoading: recommendationLoading } =\n    useQuery<IGetMovieTvResult>(\n      [\"recommendation\", \"movie\", +detail?.id, language],\n      () => getRecommendation(\"movie\", +detail?.id, language),\n      {\n        enabled: !!detail?.id && moviePath,\n      }\n    );\n\n  const { data: similar, isLoading: similarLoading } =\n    useQuery<IGetMovieTvResult>(\n      [\"similar\", \"movie\", detail?.id, language],\n      () => getSimilar(\"movie\", +detail?.id, language),\n      {\n        enabled: !!detail?.id && moviePath,\n      }\n    );\n\n  const { data: crew, isLoading: crewLoading } = useQuery<ICastCrew>(\n    [\"crew\", detail?.id, language],\n    () => getCrews(\"movie\", +detail?.id, language),\n    {\n      enabled: !!detail?.id && moviePath,\n    }\n  );\n\n  const { data: keyword, isLoading: keywordLoading } = useQuery<IKeywords>(\n    [\"keyword\", \"movie\", detail?.id],\n    () => getKeyword(\"movie\", +detail?.id),\n    {\n      enabled: !!detail?.id && moviePath,\n    }\n  );\n\n  return {\n    collection,\n    collectionIsLoading,\n    recommendation,\n    recommendationLoading,\n    similar,\n    similarLoading,\n    crew,\n    crewLoading,\n    keyword,\n    keywordLoading,\n  };\n};\n\nexport default useMovieDetailQuery;\n","import { motion } from \"framer-motion\";\nimport { useNavigate } from \"react-router-dom\";\nimport { IDetail } from \"../../api/api\";\nimport { changeDateSeperator } from \"../../utils/changeDateSeperator\";\nimport { posterSizes, sizeImagePath } from \"../../utils/sizeImagePath\";\nimport Rate from \"../common/Rate\";\nimport styled from \"styled-components\";\nimport device from \"../../theme/mediaQueries\";\nimport useFindPath from \"../../hook/useFindPath\";\nimport { infoVariants, smallVariants } from \"../../utils/variants\";\n\ninterface PropsType {\n  data: IDetail[];\n}\n\nconst AdditionalContents = ({ data }: PropsType) => {\n  const navigate = useNavigate();\n  const { moviePath, myListPath, tvPath } = useFindPath();\n\n  const onNavigateClick = (id: number) => {\n    if (myListPath && moviePath) return navigate(`/myList/movie/${id}`);\n    if (myListPath && tvPath) return navigate(`/myList/tv/${id}`);\n    if (moviePath) return navigate(`/movie/${id}`);\n    navigate(`/tv/${id}`);\n  };\n\n  return (\n    <List>\n      {data?.map(\n        (item) =>\n          item.poster_path && (\n            <Contents\n              onClick={() => onNavigateClick(item.id)}\n              key={item.id}\n              variants={smallVariants}\n              whileHover=\"hover\"\n              initial=\"normal\"\n              transition={{ type: \"tween\" }}\n            >\n              <img\n                src={sizeImagePath(posterSizes.w342, item.poster_path)}\n                alt={`${item.name || item.title} poster`}\n                loading=\"lazy\"\n              />\n              <ContentsInfo variants={infoVariants}>\n                <div>\n                  <h5>{item.name || item.title}</h5>\n                  <Rate detail={true} rate={item.vote_average} />\n                  <span>\n                    {changeDateSeperator(\n                      item.first_air_date || item.release_date\n                    )}\n                  </span>\n                </div>\n              </ContentsInfo>\n            </Contents>\n          )\n      )}\n    </List>\n  );\n};\n\nconst List = styled.ul`\n  display: grid;\n  gap: 10px;\n  grid-template-columns: repeat(3, 1fr);\n  width: 100%;\n  margin-top: 5px;\n  min-height: 10vh;\n  @media ${device.tablet} {\n    grid-template-columns: repeat(4, 1fr);\n  }\n  @media ${device.desktop} {\n    grid-template-columns: repeat(5, 1fr);\n  }\n`;\n\nconst Contents = styled(motion.li)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: auto;\n  width: 100%;\n  cursor: pointer;\n  &:hover {\n    background-color: #444;\n    border-radius: 5px;\n  }\n  img {\n    border-radius: 5px;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nconst ContentsInfo = styled(motion.div)`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  width: 100%;\n  background-color: rgba(0, 0, 0, 0.8);\n  border-radius: 5px;\n  > div {\n    padding: 10px 5px;\n    min-height: 60%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    gap: 5px;\n    h5 {\n      font-size: 14px;\n      text-align: center;\n    }\n    span {\n      font-size: 12px;\n    }\n  }\n\n  @media ${device.tablet} {\n    > div {\n      padding: 15px 5px;\n    }\n    h5 {\n      font-size: 18px;\n    }\n    span {\n      font-size: 16px;\n    }\n  }\n`;\n\nexport default AdditionalContents;\n","import { motion } from \"framer-motion\";\nimport { useContext } from \"react\";\nimport { LanguageContext } from \"../../context/LanguageContext\";\nimport useFindPath from \"../../hook/useFindPath\";\nimport styled from \"styled-components\";\nimport { Language } from \"../../api/api\";\n\ninterface ICategoryProps {\n  firstDataLength?: number;\n  secondDataLength: number;\n  thirdDataLength: number;\n  category: string;\n  setCategory: (category: string) => void;\n}\n\nconst Category = ({\n  firstDataLength,\n  secondDataLength,\n  thirdDataLength,\n  category,\n  setCategory,\n}: ICategoryProps) => {\n  const { language } = useContext(LanguageContext);\n  const { moviePath } = useFindPath();\n  const firstCategoryName = moviePath ? \"Collection\" : \"Seasons\";\n\n  const onCategoryClick = (name: string) => {\n    setCategory(name);\n  };\n\n  const animated = (name: string) => {\n    return category === name ? { scale: 1.15 } : { scale: 1 };\n  };\n\n  return (\n    <Categories>\n      {!!firstDataLength && (\n        <CategoryBtn\n          onClick={() => onCategoryClick(firstCategoryName)}\n          animate={animated(firstCategoryName)}\n          $selected={category === firstCategoryName}\n        >\n          <span>{language === Language.ko ? \"시즌\" : firstCategoryName}</span>\n        </CategoryBtn>\n      )}\n      {!!secondDataLength && (\n        <CategoryBtn\n          onClick={() => onCategoryClick(\"Similar\")}\n          animate={animated(\"Similar\")}\n          $selected={category === \"Similar\"}\n        >\n          <span>{language === Language.ko ? \"비슷한 콘텐츠\" : \"Similar\"}</span>\n        </CategoryBtn>\n      )}\n      {!!thirdDataLength && (\n        <CategoryBtn\n          onClick={() => onCategoryClick(\"Recommended\")}\n          animate={animated(\"Recommended\")}\n          $selected={category === \"Recommended\"}\n        >\n          <span>\n            {language === Language.ko ? \"추천 콘텐츠\" : \"How about this?\"}\n          </span>\n        </CategoryBtn>\n      )}\n    </Categories>\n  );\n};\n\nconst CategoryBtn = styled(motion.li)<{ $selected: boolean }>`\n  display: flex;\n  align-items: center;\n  font-size: 14px;\n  font-weight: 700;\n  height: 30px;\n  cursor: pointer;\n  color: ${(props) => (props.$selected ? props.theme.pink : \"#888\")};\n`;\n\nconst Categories = styled(motion.ul)`\n  display: flex;\n  gap: 20px;\n  margin-left: 5px;\n`;\n\nexport default Category;\n","import { IDetail } from '../api/api';\nimport { Info } from './Modal';\nimport { useState } from 'react';\nimport Cast from './modalDetail/Cast';\nimport useMovieDetailQuery from '../hook/query/useMovieDetailQuery';\nimport AdditionalContents from './modalDetail/AdditionalContents';\nimport Category from './modalDetail/Category';\nimport styled from 'styled-components';\n\ninterface PropsType {\n  detail: IDetail;\n}\n\nconst MovieDetail = ({ detail }: PropsType) => {\n  const { belongs_to_collection } = detail;\n  const [category, setCategory] = useState(\n    belongs_to_collection ? 'Collection' : 'Similar'\n  );\n\n  const {\n    collection,\n    collectionIsLoading,\n    recommendation,\n    recommendationLoading,\n    similar,\n    similarLoading,\n    crew,\n  } = useMovieDetailQuery(detail);\n\n  return (\n    <>\n      {crew?.cast?.length !== 0 && <Cast cast={crew?.cast} />}\n      {!recommendationLoading && !similarLoading && !collectionIsLoading && (\n        <Info $column='column'>\n          <Category\n            firstDataLength={Object.keys(belongs_to_collection ?? {})?.length}\n            secondDataLength={similar?.results?.length ?? 0}\n            thirdDataLength={recommendation?.results?.length ?? 0}\n            category={category}\n            setCategory={setCategory}\n          />\n          <List>\n            {category === 'Collection' && belongs_to_collection && (\n              <AdditionalContents data={collection.parts} />\n            )}\n            {category === 'Similar' && similar && (\n              <AdditionalContents data={similar.results.slice(0, 9)} />\n            )}\n            {category === 'Recommended' && recommendation && (\n              <AdditionalContents data={recommendation.results.slice(0, 9)} />\n            )}\n          </List>\n        </Info>\n      )}\n    </>\n  );\n};\n\nconst List = styled.div`\n  min-height: 20vh;\n  width: 100%;\n`;\n\nexport default MovieDetail;\n","export function convertRunningTime(min: number, language: string) {\n  const hour = Math.floor(min / 60);\n  const minute = min - hour * 60;\n  if (!min) return;\n  if (min > 60)\n    return language === \"ko\"\n      ? `${hour}시간 ${minute}분`\n      : `${hour}h ${minute}m`;\n  return language === \"ko\" ? `${min}분` : `${min}m`;\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z\"\n}), 'Image');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"\n}, \"1\")], 'AccessTime');","const today = new Date().toISOString().split(\"T\")[0];\n\nexport function checkScheduledAir(air_date: string) {\n  if (!air_date) return;\n  return new Date(air_date) < new Date(`${today}`);\n}\n","import { useContext } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  getKeyword,\n  getRecommendation,\n  getSeasonDetail,\n  getSimilar,\n  getTvSeasonCrews,\n  ICastCrew,\n  IGetMovieTvResult,\n  IKeywords,\n  ISeasonDetail,\n} from \"../../api/api\";\nimport { LanguageContext } from \"../../context/LanguageContext\";\nimport useFindPath from \"../useFindPath\";\n\nconst useTvDetailQuery = (seasonNumber?: number) => {\n  const { language } = useContext(LanguageContext);\n  const { tvPath } = useFindPath();\n  const { id } = useParams();\n\n  const { data: recommendation, isLoading: recommendationLoading } =\n    useQuery<IGetMovieTvResult>(\n      [\"recommendation\", \"tv\", id, language],\n      () => getRecommendation(\"tv\", +id, language),\n      {\n        enabled: !!id && tvPath,\n      }\n    );\n\n  const { data: similar, isLoading: similarLoading } =\n    useQuery<IGetMovieTvResult>(\n      [\"similar\", \"tv\", id, language],\n      () => getSimilar(\"tv\", +id, language),\n      {\n        enabled: !!id && tvPath,\n      }\n    );\n\n  const { data: seasonCrew, isLoading: seasonCrewLoading } =\n    useQuery<ICastCrew>(\n      [\"episodes\", id, seasonNumber, language],\n      () => getTvSeasonCrews(+id, seasonNumber, language),\n      {\n        enabled: !!id && !!seasonNumber && tvPath,\n      }\n    );\n\n  const { data: keyword, isLoading: keywordLoading } = useQuery<IKeywords>(\n    [\"keyword\", \"tv\", id],\n    () => getKeyword(\"tv\", +id),\n    {\n      enabled: !!id && tvPath,\n    }\n  );\n\n  const { data: seasonDetail, isLoading: seasonDetailLoading } =\n    useQuery<ISeasonDetail>(\n      [\"season\", \"episodes\", id, seasonNumber, language],\n      () => getSeasonDetail(+id, seasonNumber, language),\n      {\n        enabled: !!id && !!seasonNumber && tvPath,\n      }\n    );\n\n  return {\n    recommendation,\n    recommendationLoading,\n    similar,\n    similarLoading,\n    seasonCrew,\n    seasonCrewLoading,\n    keyword,\n    keywordLoading,\n    seasonDetail,\n    seasonDetailLoading,\n  };\n};\n\nexport default useTvDetailQuery;\n","import { useContext, useState } from 'react';\nimport { ISeason, Language } from '../../api/api';\nimport {\n  posterSizes,\n  sizeImagePath,\n  stillSizes,\n} from '../../utils/sizeImagePath';\nimport { convertRunningTime } from '../../utils/convertRunningTime';\nimport { AccessTime, Image } from '@mui/icons-material';\nimport { changeDateSeperator } from '../../utils/changeDateSeperator';\nimport { checkScheduledAir } from '../../utils/checkScheduledAir';\nimport Rate from '../common/Rate';\nimport styled from 'styled-components';\nimport Loading from '../common/Loading';\nimport device from '../../theme/mediaQueries';\nimport useTvDetailQuery from '../../hook/query/useTvDetailQuery';\nimport { LanguageContext } from '../../context/LanguageContext';\n\ninterface PropsType {\n  seasons: ISeason[];\n  seasonNumber: number;\n  setSeasonNumber: (seasonNumber: number) => void;\n}\n\nconst Episodes = ({ seasons, seasonNumber, setSeasonNumber }: PropsType) => {\n  const { language } = useContext(LanguageContext);\n  const [episodesCount, setEpisodesCount] = useState(10);\n  const { seasonDetail, seasonDetailLoading } = useTvDetailQuery(seasonNumber);\n\n  const onSeasonNumberChange = (\n    event: React.ChangeEvent<HTMLSelectElement>\n  ) => {\n    setSeasonNumber(+event.currentTarget.value);\n  };\n\n  const handleLoadMoreClick = () => {\n    setEpisodesCount((prev) => prev + 10);\n  };\n\n  const episodes = seasonDetail?.episodes;\n  const exceptNoneInfoEpisodes = episodes?.filter(\n    (episode) => episode.still_path || episode.overview !== ''\n  );\n\n  const viewEpisode =\n    exceptNoneInfoEpisodes?.length > 0 && exceptNoneInfoEpisodes?.length < 80;\n\n  const viewLoadButton =\n    exceptNoneInfoEpisodes?.length > 10 &&\n    exceptNoneInfoEpisodes?.length > episodesCount;\n\n  return (\n    <>\n      <Select defaultValue={seasonNumber} onChange={onSeasonNumberChange}>\n        {seasons.map((season) => (\n          <option key={season.id} value={season.season_number}>\n            {season.name}\n          </option>\n        ))}\n      </Select>\n      <BasicInfo>\n        {seasonDetail?.poster_path ? (\n          <img\n            src={sizeImagePath(posterSizes.w342, seasonDetail?.poster_path)}\n            alt={`${seasonDetail?.name} poster`}\n            loading='lazy'\n          />\n        ) : (\n          <Image />\n        )}\n        <h5>{seasonDetail?.name}</h5>\n        {checkScheduledAir(seasonDetail?.air_date) ? (\n          <span>{changeDateSeperator(seasonDetail?.air_date)}</span>\n        ) : (\n          <>\n            <span>{changeDateSeperator(seasonDetail?.air_date)}</span>\n            <span className='willBeAired'>\n              {language === Language.ko\n                ? '방송 예정인 프로그램입니다.'\n                : 'This Tv Show is going to be aired.'}\n            </span>\n          </>\n        )}\n        <p>{seasonDetail?.overview}</p>\n      </BasicInfo>\n      {seasonDetailLoading ? (\n        <Loading height={80} />\n      ) : (\n        viewEpisode && (\n          <EpisodeList>\n            {exceptNoneInfoEpisodes?.slice(0, episodesCount)?.map((episode) => (\n              <Episode key={episode.id}>\n                <h6>{episode.name}</h6>\n                {episode.still_path ? (\n                  <StillImg\n                    src={sizeImagePath(stillSizes.w185, episode.still_path)}\n                    alt={`${episode.name} ${episode.episode_number} still`}\n                    loading='lazy'\n                  />\n                ) : (\n                  <AlternateImg>\n                    <Image />\n                  </AlternateImg>\n                )}\n                <div>\n                  <Rate detail={true} rate={episode?.vote_average} />\n                  {episode.runtime && (\n                    <span>\n                      <AccessTime />\n                      {convertRunningTime(episode.runtime, language)}\n                    </span>\n                  )}\n                </div>\n                <p>{episode.overview}</p>\n              </Episode>\n            ))}\n            {viewLoadButton && (\n              <button onClick={handleLoadMoreClick}>Load More Episodes</button>\n            )}\n          </EpisodeList>\n        )\n      )}\n    </>\n  );\n};\n\nconst Select = styled.select`\n  margin-top: 5px;\n  height: 30px;\n  font-size: 16px;\n  cursor: pointer;\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst BasicInfo = styled.div`\n  background-color: #c0c0c0;\n  color: #333;\n  width: 100%;\n  padding: 10px;\n  border-radius: 5px;\n  margin-top: 10px;\n  img,\n  svg {\n    width: 80px;\n    height: auto;\n    float: left;\n    margin-right: 10px;\n  }\n  svg {\n    padding: 10px;\n  }\n  span {\n    display: block;\n    font-size: 14px;\n    margin-bottom: 5px;\n    &.willBeAired {\n      color: #896a6a;\n    }\n  }\n  h5 {\n    font-weight: 700;\n    margin-bottom: 5px;\n  }\n`;\n\nconst EpisodeList = styled.ul`\n  display: flex;\n  display: -webkit-flex;\n  flex-direction: column;\n  gap: 10px;\n  width: 100%;\n  margin: 10px 0 20px;\n  button {\n    border: none;\n    background-color: transparent;\n    color: #fff;\n    width: fit-content;\n    align-self: center;\n    -webkit-align-self: center;\n    padding: 5px;\n    margin-top: 10px;\n    cursor: pointer;\n  }\n`;\n\nconst Episode = styled.li`\n  width: 100%;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${(props) => props.theme.black.lighter};\n  h6 {\n    font-weight: 700;\n    margin-bottom: 10px;\n    color: ${(props) => props.theme.pink};\n  }\n  > div {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 5px;\n    margin-bottom: 10px;\n    span {\n      display: flex;\n      align-items: center;\n      svg {\n        width: 16px;\n        height: 16px;\n        margin-right: 3px;\n      }\n    }\n  }\n  p {\n    word-break: break-all;\n  }\n  @media ${device.tablet} {\n    > div {\n      flex-direction: row;\n      align-items: center;\n      gap: 10px;\n    }\n  }\n`;\n\nconst StillImg = styled.img`\n  width: 130px;\n  height: auto;\n  float: right;\n  margin-left: 10px;\n`;\n\nconst AlternateImg = styled.div`\n  width: 80px;\n  height: 70px;\n  float: right;\n  margin-left: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${(props) => props.theme.black.veryDark};\n  border-radius: 5px;\n  svg {\n    margin: 0 auto;\n    width: 40px;\n    height: 40px;\n  }\n`;\n\nexport default Episodes;\n","import { useContext, useState } from 'react';\nimport { IKeyword, Language } from '../../api/api';\nimport { Info } from '../Modal';\nimport InfoBox from '../common/InfoBox';\nimport styled from 'styled-components';\nimport { ArrowBackIosNew, ArrowForwardIos } from '@mui/icons-material';\nimport { LanguageContext } from '../../context/LanguageContext';\n\ninterface IKeywordProps {\n  keywords: IKeyword[];\n}\n\nconst Keywords = ({ keywords }: IKeywordProps) => {\n  const { language } = useContext(LanguageContext);\n  const [showAllKeywords, setShowAllKeywords] = useState(false);\n\n  const controlKeywords = keywords //\n    ?.slice(0, showAllKeywords ? keywords?.length : 5);\n\n  const onButtonClick = () => setShowAllKeywords((prev) => !prev);\n\n  return (\n    <Info $column='column'>\n      <h5>{language === Language.ko ? '키워드' : 'Keywords'}</h5>\n      <Keyword>\n        {controlKeywords?.map((item) => (\n          <InfoBox key={item.id} info={item.name} />\n        ))}\n        {keywords?.length > 5 && (\n          <div role='button' onClick={onButtonClick}>\n            {showAllKeywords ? <ArrowBackIosNew /> : <ArrowForwardIos />}\n          </div>\n        )}\n      </Keyword>\n    </Info>\n  );\n};\n\nconst Keyword = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 5px;\n  > div {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 3px;\n    cursor: pointer;\n    svg {\n      fill: ${(props) => props.theme.pink};\n      width: 12px;\n      height: 18px;\n    }\n  }\n`;\n\nexport default Keywords;\n","import { IDetail } from \"../api/api\";\nimport { Info } from \"./Modal\";\nimport { useState } from \"react\";\nimport Episodes from \"./modalDetail/Episodes\";\nimport Cast from \"./modalDetail/Cast\";\nimport useTvDetailQuery from \"../hook/query/useTvDetailQuery\";\nimport AdditionalContents from \"./modalDetail/AdditionalContents\";\nimport Category from \"./modalDetail/Category\";\nimport Keywords from \"./modalDetail/Keywords\";\n\ninterface PropsType {\n  detail: IDetail;\n}\n\nconst TvDetail = ({ detail }: PropsType) => {\n  const [category, setCategory] = useState(\n    detail.seasons ? \"Seasons\" : \"Similar\"\n  );\n  const { seasons, number_of_seasons } = detail;\n  const latestSeason = seasons[seasons.length - 1]?.season_number;\n  const [seasonNumber, setSeasonNumber] = useState(latestSeason);\n\n  const {\n    recommendation,\n    recommendationLoading,\n    similar,\n    similarLoading,\n    seasonCrew,\n    keyword,\n  } = useTvDetailQuery(seasonNumber);\n\n  return (\n    <>\n      {keyword?.results?.length !== 0 && (\n        <Keywords keywords={keyword?.results} />\n      )}\n      {seasonCrew?.cast?.length !== 0 && <Cast cast={seasonCrew?.cast} />}\n      {!recommendationLoading && !similarLoading && (\n        <Info $column=\"column\">\n          <Category\n            firstDataLength={Object.keys(seasons || {}).length}\n            secondDataLength={similar?.results?.length}\n            thirdDataLength={recommendation?.results?.length}\n            category={category}\n            setCategory={setCategory}\n          />\n          {category === \"Seasons\" && number_of_seasons && (\n            <Episodes\n              seasons={seasons}\n              setSeasonNumber={setSeasonNumber}\n              seasonNumber={seasonNumber}\n            />\n          )}\n          {category === \"Similar\" && (\n            <AdditionalContents data={similar.results.slice(0, 9)} />\n          )}\n          {category === \"Recommended\" && (\n            <AdditionalContents data={recommendation.results.slice(0, 9)} />\n          )}\n        </Info>\n      )}\n    </>\n  );\n};\n\nexport default TvDetail;\n","import { AccessTime } from '@mui/icons-material';\nimport { useContext } from 'react';\nimport styled from 'styled-components';\nimport { LanguageContext } from '../../context/LanguageContext';\nimport { convertRunningTime } from '../../utils/convertRunningTime';\n\ninterface IRuntimeProps {\n  runtime: number;\n}\n\nconst RunTime = ({ runtime }: IRuntimeProps) => {\n  const { language } = useContext(LanguageContext);\n\n  return (\n    !!runtime && (\n      <Time>\n        <AccessTime />\n        <span>{`${convertRunningTime(runtime, language)}`}</span>\n      </Time>\n    )\n  );\n};\n\nconst Time = styled.div`\n  display: flex;\n  align-items: center;\n  svg {\n    width: auto;\n    height: 18px;\n    margin-right: 5px;\n  }\n`;\n\nexport default RunTime;\n","import styled from \"styled-components\";\nimport { IGenres } from \"../../api/api\";\n\ninterface IGenresProps {\n  genres: IGenres[];\n}\n\nconst Genres = ({ genres }: IGenresProps) => {\n  return (\n    <>\n      {genres?.length !== 0 && (\n        <Genre>\n          {genres?.map((item) => (\n            <li key={item.id}>{item.name}</li>\n          ))}\n        </Genre>\n      )}\n    </>\n  );\n};\n\nconst Genre = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 5px;\n  margin-bottom: 10px;\n  li {\n    margin-left: 20px;\n    list-style: square;\n    &:first-child {\n      margin: 0;\n      list-style: none;\n    }\n  }\n`;\n\nexport default Genres;\n","import { motion, useViewportScroll } from 'framer-motion';\nimport { v4 as uuidv4 } from 'uuid';\nimport { IDetail, Language } from '../api/api';\nimport { Theaters } from '@mui/icons-material';\nimport { changeDateSeperator } from '../utils/changeDateSeperator';\nimport { useContext } from 'react';\nimport { LanguageContext } from '../context/LanguageContext';\nimport styled from 'styled-components';\nimport device from '../theme/mediaQueries';\nimport VideoPlayer from './common/VideoPlayer';\nimport MovieDetail from './MovieDetail';\nimport TvDetail from './TvDetail';\nimport MyListButton from './common/MyListButton';\nimport RunTime from './modalDetail/RunTime';\nimport Genres from './modalDetail/Genres';\nimport Rate from './common/Rate';\nimport useFindPath from '../hook/useFindPath';\nimport Keywords from './modalDetail/Keywords';\nimport useMovieDetailQuery from '../hook/query/useMovieDetailQuery';\n\ninterface PropsType {\n  detail: IDetail;\n}\n\nconst Modal = ({ detail }: PropsType) => {\n  const { language } = useContext(LanguageContext);\n  const { scrollY } = useViewportScroll();\n  const { moviePath, tvPath } = useFindPath();\n  const { keyword } = useMovieDetailQuery(detail);\n  const {\n    id,\n    poster_path,\n    release_date,\n    first_air_date,\n    backdrop_path,\n    tagline,\n    overview,\n    name,\n    title,\n    genres,\n    homepage,\n    vote_average,\n    runtime,\n    episode_run_time,\n  } = detail;\n\n  const contentInfo = {\n    category: name ? 'tv' : 'movie',\n    id,\n    imgPath: poster_path,\n  };\n\n  return (\n    <ModalBox style={{ top: scrollY.get() + 85 }} layoutId={`${id}${uuidv4}`}>\n      <VideoContainer>\n        <VideoPlayer\n          videoId={id}\n          backdropPath={backdrop_path}\n          title={title || name}\n        />\n      </VideoContainer>\n      <DetailContainer>\n        <p>{tagline}</p>\n        <h3>{title || name}</h3>\n        <Genres genres={genres} />\n        <MyListButton contentInfo={contentInfo} />\n        <ReleaseDate>\n          <Theaters />\n          <span>{changeDateSeperator(release_date || first_air_date)}</span>\n        </ReleaseDate>\n        <RateTime>\n          <Rate rate={vote_average} />\n          <RunTime runtime={runtime || episode_run_time[0]} />\n        </RateTime>\n        {keyword?.keywords?.length !== 0 && (\n          <Keywords keywords={keyword?.keywords} />\n        )}\n        <Info $column='column'>\n          <h5>{language === Language.ko ? '줄거리' : 'Overview'}</h5>\n          <p>\n            {overview ||\n              (language === Language.ko\n                ? '제공된 정보가 없습니다.'\n                : 'There is no information')}\n          </p>\n        </Info>\n        {homepage && (\n          <HomePage href={`${homepage}`} target='_blank' rel='noreferrer'>\n            {language === Language.ko ? '공식 홈페이지' : 'Official Pages'}\n          </HomePage>\n        )}\n        {moviePath && <MovieDetail detail={detail} />}\n        {tvPath && <TvDetail detail={detail} />}\n      </DetailContainer>\n    </ModalBox>\n  );\n};\n\nconst ModalBox = styled(motion.div)`\n  box-shadow: 1px 2px 10px rgba(235, 235, 235, 0.3);\n  z-index: 5;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  width: 88vw;\n  height: 70vh;\n  margin: 0 auto;\n  border-radius: 15px;\n  overflow: scroll;\n  -ms-overflow-style: none;\n  background-color: ${(props) => props.theme.black.darker};\n  @media ${device.tablet} {\n    width: 70vw;\n  }\n  @media ${device.desktop} {\n    width: 60vw;\n  }\n  @media ${device.desktopXl} {\n    width: 50vw;\n  }\n`;\n\nconst VideoContainer = styled.section`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 30vh;\n  svg {\n    width: 30px;\n    height: 30px;\n  }\n  @media ${device.tablet} {\n    height: 40vh;\n  }\n  @media ${device.desktop} {\n    height: 45vh;\n    svg {\n      width: 40px;\n      height: 40px;\n    }\n  }\n`;\nconst DetailContainer = styled.section`\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  > p {\n    padding-bottom: 10px;\n    color: ${(props) => props.theme.white.lighter};\n  }\n  > h3 {\n    color: ${(props) => props.theme.white.lighter};\n    font-size: 22px;\n    font-weight: 700;\n    padding-bottom: 10px;\n    display: block;\n  }\n  > button {\n    margin: 10px 0;\n    width: fit-content;\n    height: 30px;\n    padding: 5px;\n  }\n  @media ${device.desktop} {\n    > p {\n      font-size: 16px;\n    }\n    > h3 {\n      font-size: 34px;\n    }\n  }\n`;\n\nconst ReleaseDate = styled.div`\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  svg {\n    width: 16px;\n    height: 16px;\n    fill: ${(props) => props.theme.yellow};\n  }\n`;\n\nconst RateTime = styled.div`\n  display: flex;\n  gap: 0 15px;\n  align-items: center;\n  margin-bottom: 15px;\n`;\n\nexport const Info = styled.section<{ $column?: string }>`\n  display: flex;\n  width: 100%;\n  overflow: scroll;\n  flex-wrap: wrap;\n  gap: 5px;\n  flex-direction: ${(props) => (props.$column ? 'column' : 'row')};\n  margin-bottom: ${(props) => (props.$column ? '25px' : '15px')};\n  align-items: ${(props) => (props.$column ? 'flex-start' : 'center')};\n  > h5 {\n    font-size: 16px;\n    font-weight: 700;\n    margin-right: 5px;\n    margin-bottom: 5px;\n    color: ${(props) => props.theme.pink};\n    width: max-content;\n  }\n  > p {\n    font-size: 16px;\n    line-height: 1.4;\n  }\n  > img {\n    width: 160px;\n    height: auto;\n    margin: 10px 0;\n  }\n`;\n\nconst HomePage = styled.a`\n  padding: 10px 0;\n  align-self: flex-end;\n  -webkit-align-self: flex-end;\n  text-decoration: underline;\n  font-size: 14px;\n  cursor: pointer;\n`;\n\nexport default Modal;\n","import { useContext } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { getTrailer, IGetVideo } from \"../../api/api\";\nimport { LanguageContext } from \"../../context/LanguageContext\";\nimport useFindPath from \"../useFindPath\";\n\nconst useTrailerQuery = (videoId: number) => {\n  const { tvPath } = useFindPath();\n  const { language } = useContext(LanguageContext);\n\n  const { data: trailer, isLoading: trailerLoading } = useQuery<IGetVideo>(\n    [\"trailer\", tvPath ? \"tv\" : \"movie\", videoId, language],\n    () => getTrailer(tvPath ? \"tv\" : \"movie\", videoId, language),\n    {\n      enabled: !!videoId,\n    }\n  );\n\n  return { trailer, trailerLoading };\n};\n\nexport default useTrailerQuery;\n","import { MovieCreation, VolumeOff, VolumeUp } from '@mui/icons-material';\nimport { useState } from 'react';\nimport { backdropSizes, sizeImagePath } from '../../utils/sizeImagePath';\nimport ReactPlayer from 'react-player/lazy';\nimport styled from 'styled-components';\nimport useTrailerQuery from '../../hook/query/useTrailerQuery';\n\ninterface PropsType {\n  videoId: number;\n  backdropPath?: string;\n  title: string;\n}\n\nconst VideoPlayer = ({ videoId, backdropPath, title }: PropsType) => {\n  const [volume, setVolume] = useState(true);\n  const { trailer, trailerLoading } = useTrailerQuery(videoId);\n  const handleVolume = () => setVolume((prev) => !prev);\n\n  return !trailerLoading && trailer.results?.length ? (\n    <>\n      <Trailer\n        url={`https://www.youtube.com/watch?v=${\n          trailer.results[trailer.results.length - 1]?.key\n        }`}\n        playing={true}\n        muted={volume ? true : false}\n        controls={false}\n        loop={true}\n        width='100%'\n        height='100%'\n        config={{\n          youtube: {\n            playerVars: {\n              origin: 'https://localhost:3000',\n            },\n          },\n        }}\n      />\n      <Volume as={volume ? VolumeOff : VolumeUp} onClick={handleVolume} />\n    </>\n  ) : (\n    <>\n      <Overlay />\n      {backdropPath ? (\n        <BackdropImg\n          src={sizeImagePath(backdropSizes.original, backdropPath)}\n          alt={`${title} backdrop`}\n          loading='lazy'\n        />\n      ) : (\n        <MovieCreation />\n      )}\n    </>\n  );\n};\n\nconst Trailer = styled(ReactPlayer)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n`;\n\nconst Volume = styled.svg`\n  cursor: pointer;\n  position: absolute;\n  bottom: 20px;\n  right: 20px;\n  width: 30px;\n  height: 30px;\n  border: 1px solid #aaa;\n  border-radius: 50%;\n  background-color: #333;\n  padding: 2px;\n`;\n\nconst Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: linear-gradient(\n    to bottom,\n    rgba(0, 0, 0, 0) 50%,\n    rgba(0, 0, 0, 1) 100%\n  );\n`;\n\nconst BackdropImg = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport default VideoPlayer;\n"],"names":["createSvgIcon","_jsx","d","CastList","styled","Actor","props","theme","black","lighter","cast","language","useContext","LanguageContext","Info","$column","Language","slice","map","item","profile_path","src","sizeImagePath","profileSizes","alt","name","Person","character","id","detail","moviePath","useFindPath","useQuery","belongs_to_collection","getCollection","enabled","collection","data","collectionIsLoading","isLoading","getRecommendation","recommendation","recommendationLoading","getSimilar","similar","similarLoading","getCrews","crew","crewLoading","getKeyword","keyword","keywordLoading","List","device","Contents","motion","ContentsInfo","navigate","useNavigate","myListPath","tvPath","poster_path","onClick","variants","smallVariants","whileHover","initial","transition","type","posterSizes","title","loading","infoVariants","Rate","rate","vote_average","changeDateSeperator","first_air_date","release_date","CategoryBtn","$selected","pink","Categories","firstDataLength","secondDataLength","thirdDataLength","category","setCategory","firstCategoryName","onCategoryClick","animated","scale","animate","useState","useMovieDetailQuery","length","Object","keys","results","parts","convertRunningTime","min","hour","Math","floor","minute","today","Date","toISOString","split","checkScheduledAir","air_date","seasonNumber","useParams","getTvSeasonCrews","seasonCrew","seasonCrewLoading","getSeasonDetail","seasonDetail","seasonDetailLoading","Select","BasicInfo","EpisodeList","Episode","StillImg","AlternateImg","veryDark","seasons","setSeasonNumber","episodesCount","setEpisodesCount","useTvDetailQuery","episodes","exceptNoneInfoEpisodes","filter","episode","still_path","overview","viewEpisode","viewLoadButton","defaultValue","onChange","event","currentTarget","value","season","season_number","Image","className","Loading","height","stillSizes","episode_number","runtime","AccessTime","prev","Keyword","keywords","showAllKeywords","setShowAllKeywords","controlKeywords","InfoBox","info","role","ArrowBackIosNew","ArrowForwardIos","number_of_seasons","latestSeason","Time","Genre","genres","ModalBox","darker","VideoContainer","DetailContainer","white","ReleaseDate","yellow","RateTime","HomePage","scrollY","useViewportScroll","backdrop_path","tagline","homepage","episode_run_time","contentInfo","imgPath","style","top","get","layoutId","uuidv4","VideoPlayer","videoId","backdropPath","MyListButton","Theaters","href","target","rel","getTrailer","trailer","trailerLoading","Trailer","ReactPlayer","Volume","Overlay","BackdropImg","volume","setVolume","useTrailerQuery","url","key","playing","muted","controls","loop","width","config","youtube","playerVars","origin","as","VolumeOff","VolumeUp","backdropSizes","MovieCreation"],"sourceRoot":""}